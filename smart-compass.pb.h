/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Fri Jun 15 11:32:11 2018. */

#ifndef PB_SMART_COMPASS_PB_H_INCLUDED
#define PB_SMART_COMPASS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _SmartCompassMessage {
    uint32_t network_id;
    pb_byte_t keyed_hash[16];
    uint32_t tx_peer_id;
    uint32_t tx_time;
    uint32_t tx_ms;
    uint32_t peer_id;
    uint32_t last_updated_at;
    uint32_t hue;
    uint32_t saturation;
    int32_t latitude;
    int32_t longitude;
/* @@protoc_insertion_point(struct:SmartCompassMessage) */
} SmartCompassMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SmartCompassMessage_init_default         {0, {0}, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define SmartCompassMessage_init_zero            {0, {0}, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SmartCompassMessage_network_id_tag       1
#define SmartCompassMessage_keyed_hash_tag       2
#define SmartCompassMessage_tx_peer_id_tag       3
#define SmartCompassMessage_tx_time_tag          4
#define SmartCompassMessage_tx_ms_tag            5
#define SmartCompassMessage_peer_id_tag          6
#define SmartCompassMessage_last_updated_at_tag  7
#define SmartCompassMessage_hue_tag              8
#define SmartCompassMessage_saturation_tag       9
#define SmartCompassMessage_latitude_tag         10
#define SmartCompassMessage_longitude_tag        11

/* Struct field encoding specification for nanopb */
extern const pb_field_t SmartCompassMessage_fields[12];

/* Maximum encoded size of messages (where known) */
#define SmartCompassMessage_size                 88

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SMART_COMPASS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
